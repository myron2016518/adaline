@import "./variable.scss";

@mixin bg-linear-gradient($default-bg: $color-black, $color-top: $color-grey-gradient-top, $color-bottom: $color-grey-gradient-bottom) {
    background-color: $default-bg;
    background: -webkit-linear-gradient($color-top, $color-bottom);
    background: linear-gradient($color-top, $color-bottom);
}

@mixin border-bottom-1px($color: #606060, $width: 1PX, $radius: 2PX, $style: solid) {
    position: relative;
    &:after {
        content: "";
        pointer-events: none;
        display: block;
        position: absolute;
        left: 0;
        bottom: 0;
        transform-origin: 0 bottom;
        border-bottom: $width $style $color;
        border-radius: $radius;
        box-sizing: border-box;
        width: 100%;
        height: 100%;
        @media (min-resolution: 2dppx) {
            width: 200%;
            height: 200%;
            border-radius: $radius * 2;
            transform: scale(.5);
        }
        @media (min-resolution: 3dppx) {
            width: 300%;
            height: 300%;
            border-radius: $radius * 3;
            transform: scale(.333);
        }
    }
}

@mixin border-top-1px($color: #606060, $width: 1PX, $radius: 2PX, $style: solid) {
    position: relative;
    &:before {
        content: "";
        pointer-events: none;
        display: block;
        position: absolute;
        left: 0;
        top: 0;
        transform-origin: 0 bottom;
        border-top: $width $style $color;
        border-radius: $radius;
        box-sizing: border-box;
        width: 100%;
        height: 100%;
        @media (min-resolution: 2dppx) {
            width: 200%;
            height: 200%;
            border-radius: $radius * 2;
            transform: scale(.5);
        }
        @media (min-resolution: 3dppx) {
            width: 300%;
            height: 300%;
            border-radius: $radius * 3;
            transform: scale(.333);
        }
    }
}

@mixin border-none() {
    &::before {
        display: none;
    }
    &::after {
        display: none;
    }
}

@mixin clearfix() {
    &:before, &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin to-wrap() {
    word-break: break-all;
    word-wrap: break-word;
    white-space: pre-wrap;
}

@mixin text-ellipsis() {
    white-space: nowrap;
    text-overflow: ellipsis;
    -o-text-overflow: ellipsis;
    overflow: hidden;
}

@mixin box-shadow($color: rgba(7, 17, 27, .1)) {
    box-shadow: 0 4PX 8PX 0 $color;
}

/**
$device: 1;

@media (min-resolution: 2dppx) {
  $device: 2;
}

@media (min-resolution: 2dppx) and (max-device-width: 640px) {
  $device: 3;
}

@function px2rem($font) {
  @if $device == 1 {
    @return $font + PX;
  } @else if $device == 2 {
    @return $font + px;
  } @else if $device == 3 {
    @return  $font*3 + Px;
  }
}
**/
